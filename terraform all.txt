provider "aws" {

  region = "us-east-1"
  access_key = "AKIAVN46CPVYAMPQR2WV"
  secret_key = "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"
}

resource "aws_instance" "firstinstance" {

  ami = "ami-006dcf34c09e50022"
  instance_type = "t2.micro"
  count = 2
  tags = {
   Name = "terraform instance"
   Environment = "cloudbots"
 }
}

..............................................................................................
vpc
..............................................................................................

resource "aws_vpc" "main" {
  cidr_block       = "172.32.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "terraform-vpc"
  }
}

......
subnet
......
resource "aws_subnet" "main" {
  vpc_id     = "vpc-0d8c0db0135d18ca9"
  cidr_block = "172.32.10.0/24"

  tags = {
    Name = "Main"
  }
}

resource "aws_subnet" "subnet2" {
  vpc_id     = "vpc-0d8c0db0135d18ca9"
  cidr_block = "172.32.20.0/24"

  tags = {
    Name = "Main"
  }
}


........
ing way
........
resource "aws_internet_gateway" "gw" {
  vpc_id = "vpc-0d8c0db0135d18ca9"

  tags = {
    Name = "main"
  }
}



........
route
........
resource "aws_route_table" "route-1" {
  vpc_id = "vpc-0d8c0db0135d18ca9"

  route {
    cidr_block = "172.32.30.0/24"
    gateway_id = "igw-089c5b00875a3b8ec"
  }

    tags = {
    Name = "route-1"
  }
}

................................................................................
load balancer
................................................................................

resource "aws_elb" "bar" {
  name               = "terraform-elb"
  availability_zones = ["us-east-1a", "us-east-1b"]

  listener {
    instance_port     = 8000
    instance_protocol = "http"
    lb_port           = 80
    lb_protocol       = "http"
  }

  listener {
    instance_port      = 8000
    instance_protocol  = "http"
    lb_port            = 443
    lb_protocol        = "https"
    ssl_certificate_id = "arn:aws:iam::373456797040:user/anand"
  }

  health_check {
    healthy_threshold   = 2
    unhealthy_threshold = 2
    timeout             = 3
    target              = "HTTP:8000/"
    interval            = 30
  }

  instances                   = ["i-0c22556865f34dd41"]
  cross_zone_load_balancing   = true
  idle_timeout                = 400
  connection_draining         = true
  connection_draining_timeout = 400

  tags = {
    Name = "terraform-elb"
  }
}

....................................................................................
auto sca
....................................................................................

provider "aws" {
  region = "us-west-2" # Replace with your preferred region
}

# Create a launch configuration
resource "aws_launch_configuration" "example" {
  image_id = "ami-0c55b159cbfafe1f0" # Replace with your preferred AMI
  instance_type = "t2.micro" # Replace with your preferred instance type
}

# Create an Auto Scaling Group
resource "aws_autoscaling_group" "example" {
  launch_configuration = aws_launch_configuration.example.id
  min_size = 1
  max_size = 3
  desired_capacity = 2

  # Configure scaling policies
  tag {
    key = "Environment"
    value = "Production"
    propagate_at_launch = true
  }

 lifecycle {
    create_before_destroy = true
  }
}
